[{"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\index.tsx":"1","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\reportWebVitals.ts":"2","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\App.tsx":"3","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\List\\List.tsx":"4","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\context\\ListContext.tsx":"5","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\Modal\\Modal.tsx":"6","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\context\\ModalContext.tsx":"7","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\ListItem\\ListItem.tsx":"8","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\types\\types.ts":"9","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\SubListItem\\SubListItem.tsx":"10","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\FormInput\\FormInput.tsx":"11","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\hooks\\useForm.tsx":"12","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\AddFormItem\\AddFormItem.tsx":"13","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\AddFormSubitem\\AddFormSubitem.tsx":"14"},{"size":660,"mtime":1610221325249,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1610150758273,"results":"17","hashOfConfig":"16"},{"size":204,"mtime":1610373735473,"results":"18","hashOfConfig":"16"},{"size":1807,"mtime":1610396533655,"results":"19","hashOfConfig":"16"},{"size":2141,"mtime":1610398337397,"results":"20","hashOfConfig":"16"},{"size":928,"mtime":1610337857516,"results":"21","hashOfConfig":"16"},{"size":1008,"mtime":1610331429451,"results":"22","hashOfConfig":"16"},{"size":296,"mtime":1610237688496,"results":"23","hashOfConfig":"16"},{"size":92,"mtime":1610237571793,"results":"24","hashOfConfig":"16"},{"size":1101,"mtime":1610391953974,"results":"25","hashOfConfig":"16"},{"size":340,"mtime":1610288989456,"results":"26","hashOfConfig":"16"},{"size":518,"mtime":1610326903228,"results":"27","hashOfConfig":"16"},{"size":1104,"mtime":1610391122724,"results":"28","hashOfConfig":"16"},{"size":1035,"mtime":1610394995409,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"bt9tpa",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\index.tsx",[],[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\reportWebVitals.ts",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\App.tsx",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\List\\List.tsx",["66"],"/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport styles from 'components/List/List.module.scss';\r\nimport { useListContext } from 'context/ListContext';\r\nimport ListItem from 'components/ListItem/ListItem';\r\nimport SubListItem from 'components/SubListItem/SubListItem';\r\nimport Modal from 'components/Modal/Modal';\r\nimport AddFormItem from 'components/AddFormItem/AddFormItem';\r\nimport AddFormSubitem from 'components/AddFormSubitem/AddFormSubitem';\r\n\r\nconst List = () => {\r\n  const { listItems } = useListContext();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [extendedFormId, setExtendedFormId] = useState<null | string>(null);\r\n\r\n  const handleAddSubItem = (id: any) => {\r\n    setOpenModal(true);\r\n    setExtendedFormId(id);\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    setExtendedFormId(null);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.listWrapper}>\r\n      <h2 className={styles.listTitle}>People</h2>\r\n      <ul className={styles.list}>\r\n        {listItems.map(({ id, name, sublist, extended }) =>\r\n          !extended ? (\r\n            <ListItem key={id} id={id} name={name} />\r\n          ) : (\r\n            <SubListItem\r\n              handleAddSubItem={handleAddSubItem}\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              sublist={sublist}\r\n            />\r\n          )\r\n        )}\r\n        <button onClick={handleAddItem} className={styles.listBtn}>\r\n          &#x0002B;\r\n        </button>\r\n      </ul>\r\n      <Modal isModalOpen={openModal} closeModal={setOpenModal}>\r\n        {extendedFormId ? (\r\n          <AddFormSubitem extendedFormId={extendedFormId} />\r\n        ) : (\r\n          <AddFormItem />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\context\\ListContext.tsx",["67"],"/* eslint-disable react/prop-types */\r\nimport React, { createContext, useState, useContext } from 'react';\r\nimport { ListItem } from 'types/types';\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\nconst initialState = [\r\n  {\r\n    id: 1,\r\n    name: 'Age 40+',\r\n    sublist: null,\r\n    extended: false\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ethnicity',\r\n    sublist: ['Black', 'Hispanic'],\r\n    extended: true\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Incomeyearly 45k USD+',\r\n    sublist: null,\r\n    extended: false\r\n  }\r\n];\r\n\r\ntype ListConxtextProps = {\r\n  listItems: ListItem[];\r\n  addItemToList: (listItem: ListItem) => void;\r\n  removeItemFromList: (id: number) => void;\r\n  addItemToSublist: (value: any) => void;\r\n};\r\n\r\nexport const ListContext = createContext<ListConxtextProps | undefined>(\r\n  undefined\r\n);\r\n\r\nconst ListProvider: React.FC = ({ children }) => {\r\n  const [listItems, setListItems] = useState<ListItem[]>(initialState);\r\n\r\n  const addItemToSublist = (subItem: ListItem) => {\r\n    const newList = listItems.map((list) => {\r\n      if (list.id === subItem.id && list.sublist) {\r\n        const updatedItem = {\r\n          ...list,\r\n          sublist: [...list.sublist, subItem.name]\r\n        };\r\n\r\n        return updatedItem;\r\n      }\r\n\r\n      return list;\r\n    });\r\n\r\n    setListItems(newList);\r\n  };\r\n\r\n  const addItemToList = (listItem: ListItem) => {\r\n    console.log(listItem);\r\n    const newListItem = {\r\n      ...listItem,\r\n      id: uuidv4()\r\n    };\r\n    console.log('add list to item');\r\n    setListItems((prevState) => [...prevState, newListItem]);\r\n  };\r\n  const removeItemFromList = () => {\r\n    console.log('remove item from list');\r\n  };\r\n\r\n  return (\r\n    <ListContext.Provider\r\n      value={{\r\n        listItems,\r\n        addItemToList,\r\n        removeItemFromList,\r\n        addItemToSublist\r\n      }}\r\n    >\r\n      {children}\r\n    </ListContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useListContext = (): ListConxtextProps => {\r\n  const ctx = useContext(ListContext);\r\n  if (ctx === undefined) {\r\n    throw new Error('useListContext must be used within a ListProvider');\r\n  }\r\n  return ctx;\r\n};\r\n\r\nexport default ListProvider;\r\n","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\Modal\\Modal.tsx",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\context\\ModalContext.tsx",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\ListItem\\ListItem.tsx",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\types\\types.ts",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\SubListItem\\SubListItem.tsx",["68"],"/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport styles from 'components/SubListItem/SubListItem.module.scss';\r\n\r\nexport type SubListItem = {\r\n  name: string;\r\n  sublist: null | string[] | undefined;\r\n  handleAddSubItem: (id: number | string) => void;\r\n  id: any;\r\n};\r\n\r\nconst SubListItem: React.FC<SubListItem> = ({\r\n  name,\r\n  sublist,\r\n  handleAddSubItem,\r\n  id\r\n}) => {\r\n  return (\r\n    <li className={styles.listItemExtended}>\r\n      <span className={styles.listItemExtendedHead}>\r\n        {name}\r\n        <button className={styles.subListItemBtn}>&#x02013;</button>\r\n      </span>\r\n      <ul className={styles.subList}>\r\n        {sublist?.map((subListItem, index) => (\r\n          <li key={index} className={styles.subListItem}>\r\n            {subListItem}\r\n            <button className={styles.subListItemBtn}>&#x02013;</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        onClick={() => handleAddSubItem(id)}\r\n        className={styles.subListBtn}\r\n      >\r\n        &#x0002B;\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SubListItem;\r\n","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\FormInput\\FormInput.tsx",["69"],"import React from 'react';\r\nimport styles from 'components/FormInput/FormInput.module.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }: any) => (\r\n  <label className={styles.label}>\r\n    {label}\r\n    <input className={styles.input} onChange={handleChange} {...otherProps} />\r\n  </label>\r\n);\r\n\r\nexport default FormInput;\r\n",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\hooks\\useForm.tsx",["70"],"import { useState } from 'react';\r\n\r\nexport const useForm = (initialState: any) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.type === 'checkbox') {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.checked\r\n      });\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  return { values, setValues, handleChange };\r\n};\r\n","C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\AddFormItem\\AddFormItem.tsx",[],"C:\\Users\\Paweł\\Desktop\\zadanie-rekrutacyjne\\src\\components\\AddFormSubitem\\AddFormSubitem.tsx",["71"],"import React from 'react';\r\nimport styles from 'components/AddFormSubitem/AddFormSubitem.module.scss';\r\nimport { useForm } from 'hooks/useForm';\r\nimport FormInput from 'components/FormInput/FormInput';\r\nimport { useListContext } from 'context/ListContext';\r\nconst initialState = {\r\n  name: ''\r\n};\r\n\r\nconst AddFormSubitem = ({ extendedFormId }: any) => {\r\n  const { values, handleChange } = useForm(initialState);\r\n  const { addItemToSublist } = useListContext();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addItemToSublist({\r\n      ...values,\r\n      id: extendedFormId\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <FormInput\r\n        label=\"name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={values.name}\r\n        handleChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" className={styles.formBtn}>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddFormSubitem;\r\n",{"ruleId":"72","severity":1,"message":"73","line":16,"column":33,"nodeType":"74","messageId":"75","endLine":16,"endColumn":36,"suggestions":"76"},{"ruleId":"72","severity":1,"message":"73","line":31,"column":29,"nodeType":"74","messageId":"75","endLine":31,"endColumn":32,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":7,"nodeType":"74","messageId":"75","endLine":9,"endColumn":10,"suggestions":"78"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":60,"nodeType":"74","messageId":"75","endLine":4,"endColumn":63,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":39,"nodeType":"74","messageId":"75","endLine":3,"endColumn":42,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":45,"nodeType":"74","messageId":"75","endLine":10,"endColumn":48,"suggestions":"81"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["82","83"],["84","85"],["86","87"],["88","89"],["90","91"],["92","93"],{"messageId":"94","fix":"95","desc":"96"},{"messageId":"97","fix":"98","desc":"99"},{"messageId":"94","fix":"100","desc":"96"},{"messageId":"97","fix":"101","desc":"99"},{"messageId":"94","fix":"102","desc":"96"},{"messageId":"97","fix":"103","desc":"99"},{"messageId":"94","fix":"104","desc":"96"},{"messageId":"97","fix":"105","desc":"99"},{"messageId":"94","fix":"106","desc":"96"},{"messageId":"97","fix":"107","desc":"99"},{"messageId":"94","fix":"108","desc":"96"},{"messageId":"97","fix":"109","desc":"99"},"suggestUnknown",{"range":"110","text":"111"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"110","text":"112"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"113","text":"111"},{"range":"113","text":"112"},{"range":"114","text":"111"},{"range":"114","text":"112"},{"range":"115","text":"111"},{"range":"115","text":"112"},{"range":"116","text":"111"},{"range":"116","text":"112"},{"range":"117","text":"111"},{"range":"117","text":"112"},[722,725],"unknown","never",[686,689],[284,287],[155,158],[75,78],[344,347]]